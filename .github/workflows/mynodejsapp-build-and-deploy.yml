name: "[My node js app] Build and deploy"

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build app
    outputs:
      image_name: registry.digitalocean.com/my-registry123/mynodejsapp:${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        run: |
          cd mynodejsapp
          docker build -t registry.digitalocean.com/my-registry123/mynodejsapp:${{ github.sha }} -f Dockerfile.production .
          docker login registry.digitalocean.com -u dockeruser -p ${{ secrets.REGISTRY_TOKEN }}
          docker push registry.digitalocean.com/my-registry123/mynodejsapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy app
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_REMOTE_PORT || '22' }} ${{ secrets.SSH_REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files via SCP
        run: |
          scp -P ${{ secrets.SSH_REMOTE_PORT || '22' }} -r ./mynodejsapp/deploy/docker-compose.yaml ${{ secrets.SSH_REMOTE_USER }}@${{ secrets.SSH_REMOTE_HOST }}:/opt/mynodejsapp/

      - name: Restart remote app
        run: |
          ssh -p ${{ secrets.REMOTE_PORT || '22' }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            cd /opt/mynodejsapp/
            yq -i '.services.web.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml
            docker compose up -d --remove-orphans
          EOF